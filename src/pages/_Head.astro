---
import "../styles/global.css";
import "@fontsource/inter/latin-400.css";
import "@fontsource/inter/latin-600.css";
import "@fontsource/lora/400.css";
import "@fontsource/lora/600.css";
import inter400 from "@fontsource/inter/files/inter-latin-400-normal.woff2";
import inter600 from "@fontsource/inter/files/inter-latin-600-normal.woff2";
import lora400 from "@fontsource/lora/files/lora-latin-400-normal.woff2";
import lora600 from "@fontsource/lora/files/lora-latin-600-normal.woff2";

import { ClientRouter } from "astro:transitions";
import { website } from "./seo";

interface Props {
  title: string;
  description: string;
  ogImage?: string;
}

const { title, description, ogImage = "/og-image.png" } = Astro.props;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link
  rel="icon"
  type="image/svg+xml"
  href="/favicon-dark.svg"
  media="(prefers-color-scheme: dark)"
/>
<link
  rel="icon"
  type="image/svg+xml"
  href="/favicon-light.svg"
  media="(prefers-color-scheme: light)"
/>
<link rel="icon" type="image/x-icon" href="/favicon-light.svg" />
<meta name="generator" content={Astro.generator} />

<!-- Font preloads -->
<link rel="preload" href={inter400} as="font" type="font/woff2" crossorigin />
<link rel="preload" href={inter600} as="font" type="font/woff2" crossorigin />
<link rel="preload" href={lora400} as="font" type="font/woff2" crossorigin />
<link rel="preload" href={lora600} as="font" type="font/woff2" crossorigin />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(ogImage, Astro.url)} />
<meta property="og:site_name" content={website.name} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(ogImage, Astro.url)} />

<ClientRouter />

<!-- RSS Link -->
<link
  rel="alternate"
  type="application/rss+xml"
  title={website.name}
  href={new URL("rss.xml", Astro.site)}
/>

<script>
  import type { TransitionBeforeSwapEvent } from "astro:transitions/client";
  document.addEventListener("astro:before-swap", (e) =>
    [
      ...(e as TransitionBeforeSwapEvent).newDocument.head.querySelectorAll(
        // prettier-ignore
        "link[as=\"font\"]"
      ),
    ].forEach((link) => link.remove())
  );
</script>

<script is:inline>
  // import {
  //   toggleTheme,
  //   preloadTheme,
  // } from "@pages/_components/ThemeToggler.astro";

  function doRevealAnimation() {
    const animateElements = document.querySelectorAll(".animate");
    const revealElementsViaOpacity =
      document.querySelectorAll(".reveal-opacity");

    animateElements.forEach((element, index) => {
      setTimeout(() => {
        element.classList.add("show");
      }, index * 100);
    });

    revealElementsViaOpacity.forEach((element, index) => {
      setTimeout(() => {
        element.classList.add("show");
      }, index * 100);
    });
  }

  function notifyOnScroll() {
    if (window.scrollY > 0) {
      document.documentElement.classList.add("scrolled");
    } else {
      document.documentElement.classList.remove("scrolled");
    }
  }

  function scrollToTop(event) {
    event.preventDefault();
    window.scrollTo({
      top: 0,
      behavior: "smooth",
    });
  }

  function init() {
    // preloadTheme();
    notifyOnScroll();
    doRevealAnimation();

    const backToTop = document.getElementById("back-to-top");
    backToTop?.addEventListener("click", (event) => scrollToTop(event));

    const backToPrev = document.getElementById("back-to-prev");
    backToPrev?.addEventListener("click", () => window.history.back());

    // window
    //   .matchMedia("(prefers-color-scheme: dark)")
    //   .addEventListener("change", (event) => {
    //     if (localStorage.theme === "system" || !localStorage.theme) {
    //       toggleTheme(event.matches);
    //     }
    //   });

    document.addEventListener("scroll", notifyOnScroll);
  }

  document.addEventListener("DOMContentLoaded", () => init());
  document.addEventListener("astro:after-swap", () => init());
  // preloadTheme();
</script>
