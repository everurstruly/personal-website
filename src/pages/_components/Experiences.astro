---
import {
  ExternalLink,
  BriefcaseBusiness,
  Building2,
  Frame,
} from "lucide-astro";

const experiences = [
  {
    icon: Building2,
    date: ["Feb 2025", "Till Date"],
    role: "Full Stack Developer",
    business: "X3Lab",
    contribution:
      "Conducted code reviews, feasibility studies, and software design to enhance project quality. Improved API structure and implemented new functional integrations within an existing Node.js codebase. Converted Figma designs into fully responsive web interfaces using Next.js and Tailwind CSS.",
    attachments: [{ label: "Screenshot", url: "" }],
    tech: ["React.js", "Node.js", "Tailwind CSS", "Nest.js", "Git"],
  },
  {
    icon: Frame,
    date: ["Nov 2021", "Nov 2022"],
    role: "Front End Developer",
    business: "Studio Doresh",
    contribution:
      "Translated UI/UX designs into functional, accessible, and responsive components while developing and maintaining dynamic web applications using Vanilla JavaScript and React.js. Integrated APIs, optimized performance, and collaborated under the mentorship of a former developer turned UI/Product Designer.",
    attachments: [{ label: "Screenshot", url: "" }],
    tech: ["Mobile First CSS", "DOM Javascript", "Bootstrap", "Figma", "Git"],
  },
  {
    icon: BriefcaseBusiness,
    date: ["2022", "Till Date"],
    role: "Web Developer",
    business: "Freelance",
    contribution:
      "Worked across various domains including SaaS, gamification, fintech, e-commerce, headless CMS, and BaaS to build full-stack web applications with strong focus on user experience, solving both personal and client challenges through effective, scalable solutions.",
    attachments: [{ label: "Screenshot", url: "" }],
    tech: ["Typescript", "Next.js", "Nest.js", "Tailwind CSS", "Git"],
  },
];
---

<section id="experiences" class="pt-16 pb-20 lg:gap-x-3">
  <header
    class="mb-8 lg:mb-14 flex flex-wrap gap-y-2 items-center gap-x-4 justify-between"
  >
    <h2
      class="text-4xl font-semibold uppercase text-zinc-800 dark:text-zinc-100"
    >
      Work Experiences
    </h2>

    <a
      href="https://github.com/everurstruly?tab=repositories"
      class="px-0 flex gap-x-1 text-sm mt-4 hover:underline underline-offset-2 mastermind_jumpscare text-blue-600"
      target="_blank"
      rel="noopener noreferrer"
    >
      {`Download Full Version Resume {Soon}`}
      <ExternalLink class="size-4 stroke-current" />
    </a>
  </header>

  <div class="flex flex-col *:py-10 lg:ms-2">
    {
      experiences.map((work) => (
        <article
          class={`relative w-full lg:max-w-3xl grow timeline-shell timeline-black`}
        >
          <div class="lg:flex items-start">
            <div class="hidden lg:flex shrink-0 lg:w-[var(--timeline-col-width)] lg:pe-[var(--timeline-col-padding-end)] lg:mt-3">
              <span class="timeline-date">
                {work.date?.[0]} — {work.date?.[1]}
              </span>
            </div>

            <div class="bg-background lg:-ms-4 size-8 lg:size-10__ border shrink-0 mb-4 lg:mb-0 lg:mt-0 grid place-content-center lg:z-20 lg:relative border-zinc-400/60 dark:border-zinc-600">
              <work.icon className="size-4 stroke-zinc-400 dark:stroke-zinc-600" />
            </div>

            <div class="lg:ps-20">
              <header class="mb-4 flex flex-col">
                <h5 class="text-base text-zinc-600 dark:text-default-100">
                  {work.business}
                </h5>
                <h4 class="text-base font-semibold sm:text-lg lg:text-xl">
                  {work.role}
                </h4>
                <p class="lg:hidden timeline-date text-xs">
                  {work.date?.[0]} — {work.date?.[1]}
                </p>
              </header>

              <p class="text-sm lg:text-base text-zinc-800 dark:text-zinc-400">
                {work.contribution}{" "}
                <span class="font-semibold">Technologies used:</span>{" "}
                {work.tech.join(", ")}
              </p>
            </div>
          </div>
        </article>
      ))
    }
  </div>
</section>

<style>
  /* Color tokens (single source of truth) */
  :root {
    --timeline-color-zinc: #666666;
    --timeline-color-black: #444;
    --timeline-color-red: #ef4444;
    --timeline-color-yellow: #f59e0b;
    --timeline-color-green: #107d58;
    --timeline-color-blue: #2563eb;

    /* control the default border and date colors for the timeline */
    --timeline-border-color: #444;
    --timeline-date-color: #eee;
  }

  /* Dark-mode overrides (html.dark or html[dark] will apply)
     Using the attribute selector makes it easy to support custom theme names:
       <html dark> or <html dark="slate"> or <html class="dark">
  */
  html.dark,
  html[dark] {
    --timeline-color-zinc: #9ca3af; /* lighter zinc in dark */
    --timeline-color-black: #444; /* show as light in dark */
    --timeline-color-red: #fca5a5;
    --timeline-color-yellow: #fcd34d;
    --timeline-color-green: #34d399;
    --timeline-color-blue: #93c5fd;

    /* dark-mode border + date defaults */
    --timeline-border-color: rgba(233, 233, 233, 0.091);
    --timeline-date-color: #ddd;
  }

  /* small utility classes to map to the --timeline-color variable via tokens */
  .timeline-zinc {
    --timeline-color: var(--timeline-color-zinc);
    --timeline-border-color: rgba(102, 102, 102, 0.12);
    --timeline-date-color: var(--timeline-color-zinc);
  }
  .timeline-black {
    --timeline-color: var(--timeline-color-black);
    --timeline-border-color: #333;
    --timeline-date-color: var(--timeline-color-black);
  }
  .timeline-red {
    --timeline-color: var(--timeline-color-red);
    --timeline-border-color: rgba(239, 68, 68, 0.12);
    --timeline-date-color: var(--timeline-color-red);
  }
  .timeline-yellow {
    --timeline-color: var(--timeline-color-yellow);
    --timeline-border-color: rgba(245, 158, 11, 0.12);
    --timeline-date-color: var(--timeline-color-yellow);
  }
  .timeline-green {
    --timeline-color: var(--timeline-color-green);
    --timeline-border-color: rgba(16, 125, 88, 0.12);
    --timeline-date-color: var(--timeline-color-green);
  }
  .timeline-blue {
    --timeline-color: var(--timeline-color-blue);
    --timeline-border-color: rgba(37, 99, 235, 0.12);
    --timeline-date-color: var(--timeline-color-blue);
  }

  /* default date color for timeline items */
  .timeline-date {
    color: var(--timeline-date-color);
    @apply capitalize text-xs font-mono leading-relaxed lg:text-nowrap;
  }

  /* gap utilities for the dashed timeline */
  .timeline-gap-none {
    --border-gap: 0px;
  }
  .timeline-gap-sm {
    --border-gap: calc(var(--border-width) * 1);
  }
  .timeline-gap-md {
    --border-gap: calc(var(--border-width) * 3);
  }
  .timeline-gap-lg {
    --border-gap: calc(var(--border-width) * 6);
  }
</style>

<style>
  @media screen and (min-width: 1024px) {
    .timeline-shell {
      --border-width: 1px; /* thickness of the dashed line */
      --border-height: 1px; /* thickness of the dashed line */
      --timeline-col-padding-end: 6rem;
      --timeline-col-width: calc(8rem + var(--timeline-col-padding-end));
      --transition-duration: 700ms;
      --border-gap: calc(
        var(--border-width) * 4
      ); /* default gap between dash segments */
    }

    .timeline-shell::before {
      content: "";
      position: absolute;
      z-index: 2;
      top: 0;
      left: var(--timeline-col-width);
      height: 100%;
      width: var(--border-height);
      pointer-events: none;

      /* vertical gradient that fades at top/bottom. Use the border token so theme/dark-mode can override it. */
      background: linear-gradient(
        to bottom,
        rgba(255, 255, 255, 0) 0%,
        var(--timeline-border-color, rgba(0, 0, 0, 0.08)) 10%,
        var(--timeline-border-color, rgba(0, 0, 0, 0.14)) 20%,
        var(--timeline-border-color, rgba(0, 0, 0, 0.14)) 80%,
        var(--timeline-border-color, rgba(0, 0, 0, 0.08)) 90%,
        rgba(255, 255, 255, 0) 100%
      );

      /* use a repeating mask to create the dashed segments from that gradient */
      -webkit-mask: repeating-linear-gradient(
        to bottom,
        #000 0 var(--border-width),
        transparent var(--border-width)
          calc(var(--border-width) + var(--border-gap))
      );
      mask: repeating-linear-gradient(
        to bottom,
        #000 0 var(--border-width),
        transparent var(--border-width)
          calc(var(--border-width) + var(--border-gap))
      );

      /* subtle transition for hover/show/hide */
      opacity: 0.85;
      transition:
        opacity var(--transition-duration) ease,
        transform var(--transition-duration) ease;
      transform-origin: top center;
    }

    /* consolidate pseudo-elements for the dashed timeline */
    .timeline-shell::before,
    .timeline-shell::after {
      content: "";
      position: absolute;
      top: 0;
      left: var(--timeline-col-width);
      height: 100%;
      width: var(--border-height);
      pointer-events: none;
      -webkit-mask: repeating-linear-gradient(
        to bottom,
        #000 0 var(--border-width),
        transparent var(--border-width)
          calc(var(--border-width) + var(--border-gap))
      );
      mask: repeating-linear-gradient(
        to bottom,
        #000 0 var(--border-width),
        transparent var(--border-width)
          calc(var(--border-width) + var(--border-gap))
      );
      transform-origin: top center;
      transition:
        opacity var(--transition-duration) ease,
        transform var(--transition-duration) ease;
    }

    /* base gray line */
    .timeline-shell::before {
      z-index: 1; /* keep base lower so the colored overlay can sit above it */
      opacity: 0.9;
      background: linear-gradient(
        to bottom,
        rgba(255, 255, 255, 0) 0%,
        color-mix(
            in srgb,
            var(--timeline-border-color, rgba(0, 0, 0, 0.08)) 80%,
            rgba(255, 255, 255, 0) 20%
          )
          10%,
        var(--timeline-border-color, rgba(0, 0, 0, 0.14)) 20%,
        var(--timeline-border-color, rgba(0, 0, 0, 0.14)) 80%,
        color-mix(
            in srgb,
            var(--timeline-border-color, rgba(0, 0, 0, 0.08)) 80%,
            rgba(255, 255, 255, 0) 20%
          )
          90%,
        rgba(255, 255, 255, 0) 100%
      );
    }

    /* colored overlay - hidden by default, slides in on hover along Y axis */
    .timeline-shell::after {
      z-index: 3; /* sit above the base line but not above everything else */
      opacity: 0;
      transform: translateY(-10%);
      background: linear-gradient(
        to bottom,
        rgba(255, 255, 255, 0.5) 0%,
        var(--timeline-color) 12%,
        var(--timeline-color) 88%,
        rgba(255, 255, 255, 0.5) 100%
      );
    }

    /* .timeline-shell:hover::after {
      opacity: 0.5;
      transform: translateY(0%);
    } */

    .timeline-shell:hover .timeline-date {
      color: var(--timeline-color);
    }
  }
</style>
