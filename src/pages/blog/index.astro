---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "@pages/_Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Container from "@components/Container.astro";
import ArrowCard from "@components/ArrowCard.astro";

type GroupedPost = {
  [year: string]: CollectionEntry<"blog">[];
};

const posts = (await getCollection("blog"))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .reduce((acc: GroupedPost, post) => {
    const year = post.data.date.getFullYear().toString();
    if (!acc[year]) {
      acc[year] = [];
    }

    acc[year].push(post);
    return acc;
  }, {});

const years = Object.keys(posts).sort((a, b) => parseInt(b) - parseInt(a));
---

<Layout
  title={"Blog"}
  description={"This is the blog page of Oghenetefa Okotete, where I share my thoughts and insights on various topics."}
>
  <Header />
  <main>
    <Container>
      <div class="space-y-10">
        <div class="animate font-semibold text-black dark:text-white">Blog</div>
        <div class="space-y-4">
          {
            years.map((year) => (
              <section class="animate space-y-4">
                <div class="font-semibold text-black dark:text-white">
                  {year}
                </div>
                <div>
                  <ul class="flex flex-col gap-4">
                    {posts[year].map((post) => (
                      <li>
                        <ArrowCard entry={post} />
                      </li>
                    ))}
                  </ul>
                </div>
              </section>
            ))
          }
        </div>
      </div>
    </Container>
  </main>
  <Footer />
</Layout>
